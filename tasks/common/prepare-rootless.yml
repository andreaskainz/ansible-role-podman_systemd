---
- name: "{{ type }} '{{ item.name }}' - Add group '{{ run_as_group }}'"
  group:
    name: "{{ run_as_group }}"

# TODO: handle an existing user which should not be added to the group
- name: "{{ type }} '{{ item.name }}' - Add user '{{ run_as_user }}'"
  user:
    name: "{{ run_as_user }}"
    group: "{{ run_as_group }}"
    password: '!'
    shell: /bin/bash

- name: "{{ type }} '{{ item.name }}' - Add specified subuids"
  ansible.builtin.lineinfile:
    path: /etc/subuid
    regexp: "^{{ run_as_user }}:.*"
    line: "{{ run_as_user }}:{{ run_user_subid }}"
    owner: root
    group: root
    mode: 0644
  when: run_user_subid is defined

- name: "{{ type }} '{{ item.name }}' - Add specified subgids"
  ansible.builtin.lineinfile:
    path: /etc/subgid
    regexp: "^{{ run_as_user }}:.*"
    line: "{{ run_as_user }}:{{ run_user_subid }}"
    owner: root
    group: root
    mode: 0644
  when: run_user_subid is defined

- name: "{{ type }} '{{ item.name }}' - Check for user '{{ run_as_user }}' subuid"
  lineinfile:
    path: /etc/subuid
    regexp: '^{{ run_as_user }}:.*$'
    state: absent
  check_mode: "yes"
  changed_when: false
  register: subuid
  failed_when: not subuid.found

# NOTE: subgids are actually for users and not groups
#       https://man7.org/linux/man-pages/man5/subgid.5.html
- name: "{{ type }} '{{ item.name }}' - Check for group '{{ run_as_group }}' subgid"
  lineinfile:
    path: /etc/subgid
    regexp: '^{{ run_as_group }}:.*$'
    state: absent
  check_mode: "yes"
  changed_when: false
  register: subgid
  failed_when: not subgid.found

# TODO: add subids if user wants to automatically
